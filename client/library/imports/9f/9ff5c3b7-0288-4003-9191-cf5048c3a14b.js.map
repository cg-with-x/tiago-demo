{"version":3,"sources":["../../../../assets/scripts/assets/scripts/start.js"],"names":["cc","Class","extends","Component","properties","labelNickName","Label","spriteAvatar","Sprite","nodeFeature","Node","nodeLoading","onLoad","dataManager","tiagoInited","active","console","log","tiago","init","appId","debug","gameEnv","GAME_ENV","Test","onJoinTeam","team","warn","hasHomepage","then","currentTeam","catch","err","tt","onShow","start","selfUserInfo","renderSelf","info","string","nickName","utils","renderAvatar","avatarUrl","onClickGetConfig","BUSINESS_SCENE","config","getConfig","currentScene","scene","LiveRoom","params","isNewcomer","Wonderland","onClickGetUserInfo","getUserInfo","onClickStartSingleMatch","match","startSingleMatch","on","result","director","loadScene","videoTempPath","isGameEnd","room","joinGameRoom","roomNum","isTT","gameRecorderManager","getGameRecorderManager","duration","onStop","res","videoPath","joinRTCForGameRoom","roomManager","loadRoom","error","onClickStartSingleMatchAI","isAutoAppendAI","onClickMakeTeam","event","userData","split","size","ai","parseInt","makeTeam","teamSize","isAutoJoinRTC","type","MATCH_TYPE","Single","minPlayerCount","matchId","gameRoomScriptId","onClickDisableMatch","disableMatch","onClickDisableInvite","disableInvite","onClickMoveMic","setMicPanelOffset","onClickRoom","detail"],"mappings":"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","file":"start.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import tiago from \"@byted-creative/tiago\";\nimport roomManager from \"./room_manager\";\nimport dataManager from \"./data_manager\";\nimport utils from \"./utils\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    labelNickName: cc.Label,\n    spriteAvatar: cc.Sprite,\n    nodeFeature: cc.Node,\n    nodeLoading: cc.Node,\n  },\n\n  onLoad() {\n    if (!dataManager.tiagoInited) {\n      this.nodeFeature.active = false;\n      this.nodeLoading.active = true;\n      console.log(\"new version 2.7.6\");\n      console.log(\"Tiago\", tiago);\n  \n      tiago\n        .init({\n          appId: \"tt5e982825c1b2d9a3\", \n          debug: true,\n          gameEnv: tiago.GAME_ENV.Test,\n          // gameEnv: tiago.GAME_ENV.Release,\n          onJoinTeam: (team) => {\n            console.warn(\"on join team 1\");\n            this.onJoinTeam(team);\n          }, // 2.0 的主要功能，组队，会在受邀加入队伍、或自己创建队伍后触发！\n          hasHomepage: true,\n          // isNormalGame: true,\n        })\n        .then(() => {\n          console.warn(\"tiago init success.\");\n          dataManager.tiagoInited = true;\n          dataManager.tiago = tiago; \n\n          console.warn(dataManager.currentTeam);\n\n          this.nodeFeature.active = true;\n          this.nodeLoading.active = false;\n        })\n        .catch((err) => {\n          console.log(err);\n          // NOTE: 一般情况不会出错，我们会对错误情况做监控，游戏可以处理一些异常情况下的表现\n        });\n    } else {\n      this.nodeFeature.active = true;\n      this.nodeLoading.active = false;\n    }\n \n    console.log(\"loaded\");\n    tt.onShow(() => {\n      console.log(\"tt onshow\", dataManager.tiago);\n    }); \n  },\n\n  start() {\n    if (dataManager.selfUserInfo) {\n      this.renderSelf(dataManager.selfUserInfo);\n    }\n  },\n\n  renderSelf(info) {\n    this.labelNickName.string = info.nickName;\n    utils.renderAvatar(this.spriteAvatar, info.avatarUrl);\n  },\n\n  onClickGetConfig() {\n    const { BUSINESS_SCENE } = tiago;\n\n    const config = tiago.getConfig();\n    console.log(config);\n\n    const { currentScene, scene } = config;\n\n    if (currentScene === BUSINESS_SCENE.LiveRoom) {\n      // 当前是直播场景\n      const params = scene[currentScene];\n\n      if (params.isNewcomer) {\n        // NOTE: 补充新手逻辑\n        console.log(\"新手首次加入游戏\");\n      }\n\n      // NOTE: 针对直播场景，调整使用直播专用的 UI，或处理其他特殊逻辑\n    } else if (currentScene === BUSINESS_SCENE.Wonderland) {\n      // 当前是 W 场景\n    }\n  },\n\n  onClickGetUserInfo() {\n    const info = tiago.getUserInfo();\n    console.log(info);\n\n    // NOTE: 这里只是简单的保存下来\n    dataManager.selfUserInfo = info;\n    this.renderSelf(dataManager.selfUserInfo);\n  },\n\n  onClickStartSingleMatch() {\n    const match = tiago.startSingleMatch();\n\n    match.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n    });\n\n    match.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n      cc.director.loadScene(\"game\", () => {\n        // NOTE: 随后可以加入游戏房间\n        dataManager.videoTempPath = null;\n        dataManager.isGameEnd = false;\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          console.log(\"录屏开始\");\n        }\n        dataManager.gameRecorderManager.onStop((res) => {\n          console.warn(\"录屏结束\");\n          console.warn(\"lalala\");\n          console.warn(res);\n          console.log(res.videoPath);\n          // do somethine;\n\n          // do somethine;\n          dataManager.videoTempPath = res.videoPath;\n          if (\n            dataManager.tiago &&\n            dataManager.videoTempPath &&\n            dataManager.isGameEnd\n          ) {\n            // dataManager.tiago\n            //   .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n            //   .then(() => {})\n            //   .catch((e) => {});\n          }\n        });\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    match.on(\"error\", (error) => {\n      console.log(error);\n    });\n  },\n\n  onClickStartSingleMatchAI() {\n    const match = tiago.startSingleMatch({\n      isAutoAppendAI: true, // 支持 AI 逻辑\n    });\n\n    match.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n    });\n\n    match.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n      cc.director.loadScene(\"game\", () => {\n        // NOTE: 随后可以加入游戏房间\n        dataManager.videoTempPath = null;\n        dataManager.isGameEnd = false;\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          console.warn(\"录屏开始\");\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          dataManager.gameRecorderManager.onStop((res) => {\n            console.warn(\"录屏结束\");\n            console.warn(\"lalala\");\n            console.warn(res);\n            console.log(res.videoPath);\n            // do somethine;\n\n            // do somethine;\n\n            dataManager.videoTempPath = res.videoPath;\n            if (\n              dataManager.tiago &&\n              dataManager.videoTempPath &&\n              dataManager.isGameEnd\n            ) {\n              // dataManager.tiago\n              //   .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n              //   .then(() => {})\n              //   .catch((e) => {});\n            }\n          });\n        }\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    match.on(\"error\", (error) => {\n      console.log(error);\n    });\n  },\n\n  onClickMakeTeam(event, userData) {\n    // userData: '2', '2-ai', 符合这类格式\n    let [size, ai] = userData.split(\"-\");\n    size = parseInt(size);\n    ai = !!ai;\n\n    console.log(size);\n    console.log(ai);\n\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n     \n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: size, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        minPlayerCount: 1, // 1 个人就能玩\n        matchId: `match-${size}`,\n        isAutoAppendAI: ai, // 配合 SINGLE，字段，默认不补充 AI，NVN 匹配时不支持 AI\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n        // disableAutoCreateGameRoom: true, // 默认自动创建游戏房间，可以关闭（生肖派对），关闭后，gameRoomScriptId 字段失效\n      },\n    });\n\n    // NOTE: 后续的逻辑，都会由 tiago init 时传入的 `onJoinTeam` 回调触发\n  },\n\n  onClickDisableMatch() {\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n\n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: 4, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      disableMatch: true, // 禁用匹配，因此只有组满人才会开始游戏；match 中 minPlayerCount、isAutoAppendAI 字段就会被忽略。\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n      },\n    });\n  },\n\n  onClickDisableInvite() {\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n\n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: 4, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      disableInvite: true, // 特殊功能，禁用邀请后，会自动开始单人匹配；match 中 minPlayerCount、isAutoAppendAI 字段就会被忽略。\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n      },\n    });\n  },\n\n  onClickMoveMic() {\n    // NOTE: 如果麦克风默认的位置影响了游戏 UI 显示，可以使用改接口更改位置\n    tiago.setMicPanelOffset(10, 100);\n  },\n\n  onClickRoom() {\n    cc.director.loadScene(\"room\");\n  },\n \n  onJoinTeam(team) {\n    console.warn(\"on join team\");\n    // NOTE: 可以在适当的时机进行清理，例如：在每次 makeTeam 之前。\n    dataManager.currentTeam = team; \n  \n    team.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n      console.log(team.detail());\n    });\n\n    team.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n      cc.director.loadScene(\"multi-game\", () => {\n        dataManager.videoTempPath = null;\n        dataManager.isGameEnd = false;\n        // NOTE: 随后可以加入游戏房间\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          console.warn(\"录屏开始\");\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          dataManager.gameRecorderManager.onStop((res) => {\n            console.warn(\"录屏结束\");\n            console.warn(\"lalala\");\n            console.warn(res);\n            console.log(res.videoPath);\n\n            // do somethine;\n            dataManager.videoTempPath = res.videoPath;\n            if (\n              dataManager.tiago &&\n              dataManager.videoTempPath &&\n              dataManager.isGameEnd\n            ) {\n              // dataManager.tiago\n              //   .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n              //   .then(() => {})\n              //   .catch((e) => {});\n            }\n          });\n        }\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    team.on(\"error\", (error) => {\n      console.error(`team on error`, error);\n    });\n  },\n});\n"]}