{"version":3,"sources":["../../../../assets/scripts/assets/scripts/start.js"],"names":["cc","Class","extends","Component","properties","labelNickName","Label","spriteAvatar","Sprite","nodeFeature","Node","nodeLoading","onLoad","dataManager","tiagoInited","active","tiago","init","appId","debug","then","console","log","catch","err","start","selfUserInfo","renderSelf","info","string","nickName","utils","renderAvatar","avatarUrl","onClickGetConfig","BUSINESS_SCENE","config","getConfig","currentScene","scene","LiveRoom","params","isNewcomer","Wonderland","onClickGetUserInfo","getUserInfo","onClickStartSingleMatch","match","startSingleMatch","on","result","room","joinGameRoom","roomNum","joinRTCForGameRoom","roomManager","loadRoom","error","onClickStartSingleMatchAI","isAutoAppendAI"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,uBAAeL,GAAGM,KADV;AAERC,sBAAcP,GAAGQ,MAFT;AAGRC,qBAAaT,GAAGU,IAHR;AAIRC,qBAAaX,GAAGU;AAJR,KAHP;;AAULE,UAVK,oBAUK;AAAA;;AACN,YAAI,CAACC,uBAAYC,WAAjB,EAA8B;AAC1B,iBAAKL,WAAL,CAAiBM,MAAjB,GAA0B,KAA1B;AACA,iBAAKJ,WAAL,CAAiBI,MAAjB,GAA0B,IAA1B;;AAEAC,4BAAMC,IAAN,CAAW;AACPC,uBAAO,oBADA;AAEPC,uBAAO;AAFA,aAAX,EAGGC,IAHH,CAGQ,YAAM;AACVC,wBAAQC,GAAR,CAAY,qBAAZ;AACAT,uCAAYC,WAAZ,GAA0B,IAA1B;;AAEA,sBAAKL,WAAL,CAAiBM,MAAjB,GAA0B,IAA1B;AACA,sBAAKJ,WAAL,CAAiBI,MAAjB,GAA0B,KAA1B;AACH,aATD,EASGQ,KATH,CASS,eAAO;AACZF,wBAAQC,GAAR,CAAYE,GAAZ;AACA;AACH,aAZD;AAaH,SAjBD,MAiBO;AACH,iBAAKf,WAAL,CAAiBM,MAAjB,GAA0B,IAA1B;AACA,iBAAKJ,WAAL,CAAiBI,MAAjB,GAA0B,KAA1B;AACH;;AAEDM,gBAAQC,GAAR,CAAY,QAAZ;AACH,KAlCI;AAoCLG,SApCK,mBAoCI;AACL,YAAIZ,uBAAYa,YAAhB,EAA8B;AAC1B,iBAAKC,UAAL,CAAgBd,uBAAYa,YAA5B;AACH;AACJ,KAxCI;AA0CLC,cA1CK,sBA0CMC,IA1CN,EA0CY;AACb,aAAKvB,aAAL,CAAmBwB,MAAnB,GAA4BD,KAAKE,QAAjC;AACAC,wBAAMC,YAAN,CAAmB,KAAKzB,YAAxB,EAAsCqB,KAAKK,SAA3C;AACH,KA7CI;AA+CLC,oBA/CK,8BA+Cc;AAAA,YACPC,cADO,GACYnB,eADZ,CACPmB,cADO;;;AAGf,YAAMC,SAASpB,gBAAMqB,SAAN,EAAf;AACAhB,gBAAQC,GAAR,CAAYc,MAAZ;;AAJe,YAMPE,YANO,GAMiBF,MANjB,CAMPE,YANO;AAAA,YAMOC,KANP,GAMiBH,MANjB,CAMOG,KANP;;;AAQf,YAAID,iBAAiBH,eAAeK,QAApC,EAA8C;AAC1C;AACA,gBAAMC,SAASF,MAAMD,YAAN,CAAf;;AAEA,gBAAIG,OAAOC,UAAX,EAAuB;AACnB;AACArB,wBAAQC,GAAR,CAAY,UAAZ;AACH;;AAED;AACH,SAVD,MAUO,IAAIgB,iBAAiBH,eAAeQ,UAApC,EAAgD;AACnD;AACH;AACJ,KApEI;AAsELC,sBAtEK,gCAsEgB;AACjB,YAAMhB,OAAOZ,gBAAM6B,WAAN,EAAb;AACAxB,gBAAQC,GAAR,CAAYM,IAAZ;;AAEA;AACAf,+BAAYa,YAAZ,GAA2BE,IAA3B;AACA,aAAKD,UAAL,CAAgBd,uBAAYa,YAA5B;AACH,KA7EI;AA+ELoB,2BA/EK,qCA+EqB;AACtB,YAAMC,QAAQ/B,gBAAMgC,gBAAN,EAAd;;AAEAD,cAAME,EAAN,CAAS,eAAT,EAA0B,kBAAU;AAChC;AACA5B,oBAAQC,GAAR,CAAY4B,MAAZ;AACH,SAHD;;AAKAH,cAAME,EAAN,CAAS,0BAAT,EAAqC,kBAAU;AAC3C5B,oBAAQC,GAAR,CAAY4B,MAAZ;;AAEA;AACA,gBAAMC,OAAOnC,gBAAMoC,YAAN,CAAmB;AAC5BC,yBAASH,OAAOG;AADY,aAAnB,CAAb;;AAIA;AACArC,4BAAMsC,kBAAN,CAAyBH,IAAzB;;AAEA;AACAI,mCAAYC,QAAZ,CAAqBL,IAArB;AACH,SAbD;;AAeAJ,cAAME,EAAN,CAAS,OAAT,EAAkB,iBAAS;AACvB5B,oBAAQC,GAAR,CAAYmC,KAAZ;AACH,SAFD;AAGH,KAzGI;AA2GLC,6BA3GK,uCA2GuB;AACxB,YAAMX,QAAQ/B,gBAAMgC,gBAAN,CAAuB;AACjCW,4BAAgB,IADiB,CACX;AADW,SAAvB,CAAd;;AAIAZ,cAAME,EAAN,CAAS,eAAT,EAA0B,kBAAU;AAChC;AACA5B,oBAAQC,GAAR,CAAY4B,MAAZ;AACH,SAHD;;AAKAH,cAAME,EAAN,CAAS,0BAAT,EAAqC,kBAAU;AAC3C5B,oBAAQC,GAAR,CAAY4B,MAAZ;;AAEA;AACA,gBAAMC,OAAOnC,gBAAMoC,YAAN,CAAmB;AAC5BC,yBAASH,OAAOG;AADY,aAAnB,CAAb;;AAIA;AACAE,mCAAYC,QAAZ,CAAqBL,IAArB;AACH,SAVD;;AAYAJ,cAAME,EAAN,CAAS,OAAT,EAAkB,iBAAS;AACvB5B,oBAAQC,GAAR,CAAYmC,KAAZ;AACH,SAFD;AAGH;AApII,CAAT","file":"start.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import tiago from '@byted-creative/tiago';\nimport roomManager from './room_manager';\nimport dataManager from './data_manager';\nimport utils from './utils';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        labelNickName: cc.Label,\n        spriteAvatar: cc.Sprite,\n        nodeFeature: cc.Node,\n        nodeLoading: cc.Node,\n    },\n\n    onLoad () {\n        if (!dataManager.tiagoInited) {\n            this.nodeFeature.active = false;\n            this.nodeLoading.active = true;\n\n            tiago.init({\n                appId: 'ttbad4cc6925eea862',\n                debug: true,\n            }).then(() => {\n                console.log('tiago init success.');\n                dataManager.tiagoInited = true;\n\n                this.nodeFeature.active = true;\n                this.nodeLoading.active = false;\n            }).catch(err => {\n                console.log(err);\n                // NOTE: 一般情况不会出错，我们会对错误情况做监控，游戏可以处理一些异常情况下的表现\n            });\n        } else {\n            this.nodeFeature.active = true;\n            this.nodeLoading.active = false;\n        }\n\n        console.log('loaded')\n    },\n\n    start () {\n        if (dataManager.selfUserInfo) {\n            this.renderSelf(dataManager.selfUserInfo);\n        }\n    },\n\n    renderSelf(info) {\n        this.labelNickName.string = info.nickName;\n        utils.renderAvatar(this.spriteAvatar, info.avatarUrl);\n    },\n\n    onClickGetConfig() {\n        const { BUSINESS_SCENE } = tiago;   \n\n        const config = tiago.getConfig();\n        console.log(config);\n\n        const { currentScene, scene } = config;\n\n        if (currentScene === BUSINESS_SCENE.LiveRoom) {\n            // 当前是直播场景\n            const params = scene[currentScene];\n\n            if (params.isNewcomer) {  \n                // NOTE: 补充新手逻辑\n                console.log('新手首次加入游戏');\n            }\n            \n            // NOTE: 针对直播场景，调整使用直播专用的 UI，或处理其他特殊逻辑\n        } else if (currentScene === BUSINESS_SCENE.Wonderland) {\n            // 当前是 W 场景\n        }\n    },\n\n    onClickGetUserInfo() {\n        const info = tiago.getUserInfo();\n        console.log(info);\n\n        // NOTE: 这里只是简单的保存下来\n        dataManager.selfUserInfo = info;\n        this.renderSelf(dataManager.selfUserInfo);\n    },\n\n    onClickStartSingleMatch() {\n        const match = tiago.startSingleMatch();\n\n        match.on('match-success', result => {\n            // 获得匹配成功后的用户信息\n            console.log(result);\n        });\n        \n        match.on('create-game-room-success', result => {\n            console.log(result);\n\n            // NOTE: 随后可以加入游戏房间\n            const room = tiago.joinGameRoom({\n                roomNum: result.roomNum,\n            });\n            \n            // NOTE: 加入房间连麦\n            tiago.joinRTCForGameRoom(room);\n\n            // 交由 room_manager 进行管理\n            roomManager.loadRoom(room);\n        });\n        \n        match.on('error', error => {\n            console.log(error);\n        });\n    },\n\n    onClickStartSingleMatchAI() {\n        const match = tiago.startSingleMatch({\n            isAutoAppendAI: true, // 支持 AI 逻辑\n        });\n\n        match.on('match-success', result => {\n            // 获得匹配成功后的用户信息\n            console.log(result);\n        });\n        \n        match.on('create-game-room-success', result => {\n            console.log(result);\n\n            // NOTE: 随后可以加入游戏房间\n            const room = tiago.joinGameRoom({\n                roomNum: result.roomNum,\n            });\n\n            // 交由 room_manager 进行管理\n            roomManager.loadRoom(room);\n        });\n        \n        match.on('error', error => {\n            console.log(error);\n        });\n    },\n});"]}