{"version":3,"sources":["../../../../assets/scripts/assets/scripts/start.js"],"names":["cc","Class","extends","Component","properties","labelNickName","Label","spriteAvatar","Sprite","nodeFeature","Node","nodeLoading","onLoad","dataManager","tiagoInited","active","console","log","tiago","init","appId","debug","onJoinTeam","team","warn","then","currentTeam","catch","err","start","selfUserInfo","renderSelf","info","string","nickName","utils","renderAvatar","avatarUrl","onClickGetConfig","BUSINESS_SCENE","config","getConfig","currentScene","scene","LiveRoom","params","isNewcomer","Wonderland","onClickGetUserInfo","getUserInfo","onClickStartSingleMatch","match","startSingleMatch","on","result","director","loadScene","isGameEnd","room","joinGameRoom","roomNum","isTT","gameRecorderManager","tt","getGameRecorderManager","duration","onStop","res","videoPath","showLoading","title","success","fail","videoTempPath","uploadVideo","hideLoading","showToast","icon","e","joinRTCForGameRoom","roomManager","loadRoom","error","onClickStartSingleMatchAI","isAutoAppendAI","onClickMakeTeam","event","userData","split","size","ai","parseInt","makeTeam","teamSize","isAutoJoinRTC","type","MATCH_TYPE","Single","minPlayerCount","matchId","gameRoomScriptId","onClickDisableMatch","disableMatch","onClickDisableInvite","disableInvite","onClickMoveMic","setMicPanelOffset","onClickRoom","detail"],"mappings":"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","file":"start.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import tiago from \"@byted-creative/tiago\";\nimport roomManager from \"./room_manager\";\nimport dataManager from \"./data_manager\";\nimport utils from \"./utils\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    labelNickName: cc.Label,\n    spriteAvatar: cc.Sprite,\n    nodeFeature: cc.Node,\n    nodeLoading: cc.Node,\n  },\n\n  onLoad() {\n    if (!dataManager.tiagoInited) {\n      this.nodeFeature.active = false;\n      this.nodeLoading.active = true;\n\n      console.log(\"Tiago\", tiago);\n\n      tiago\n        .init({\n          appId: \"tt5e982825c1b2d9a3\",\n          debug: true,\n          onJoinTeam: (team) => {\n            console.warn(\"on join team 1\");\n            this.onJoinTeam(team);\n          }, // 2.0 的主要功能，组队，会在受邀加入队伍、或自己创建队伍后触发！\n        })\n        .then(() => {\n          console.warn(\"tiago init success.\");\n          dataManager.tiagoInited = true;\n          dataManager.tiago = tiago;\n\n          console.warn(dataManager.currentTeam);\n\n          this.nodeFeature.active = true;\n          this.nodeLoading.active = false;\n        })\n        .catch((err) => {\n          console.log(err);\n          // NOTE: 一般情况不会出错，我们会对错误情况做监控，游戏可以处理一些异常情况下的表现\n        });\n    } else {\n      this.nodeFeature.active = true;\n      this.nodeLoading.active = false;\n    }\n\n    console.log(\"loaded\");\n  },\n\n  start() {\n    if (dataManager.selfUserInfo) {\n      this.renderSelf(dataManager.selfUserInfo);\n    }\n  },\n\n  renderSelf(info) {\n    this.labelNickName.string = info.nickName;\n    utils.renderAvatar(this.spriteAvatar, info.avatarUrl);\n  },\n\n  onClickGetConfig() {\n    const { BUSINESS_SCENE } = tiago;\n\n    const config = tiago.getConfig();\n    console.log(config);\n\n    const { currentScene, scene } = config;\n\n    if (currentScene === BUSINESS_SCENE.LiveRoom) {\n      // 当前是直播场景\n      const params = scene[currentScene];\n\n      if (params.isNewcomer) {\n        // NOTE: 补充新手逻辑\n        console.log(\"新手首次加入游戏\");\n      }\n\n      // NOTE: 针对直播场景，调整使用直播专用的 UI，或处理其他特殊逻辑\n    } else if (currentScene === BUSINESS_SCENE.Wonderland) {\n      // 当前是 W 场景\n    }\n  },\n\n  onClickGetUserInfo() {\n    const info = tiago.getUserInfo();\n    console.log(info);\n\n    // NOTE: 这里只是简单的保存下来\n    dataManager.selfUserInfo = info;\n    this.renderSelf(dataManager.selfUserInfo);\n  },\n\n  onClickStartSingleMatch() {\n    const match = tiago.startSingleMatch();\n\n    match.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n    });\n\n    match.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n      cc.director.loadScene(\"game\", () => {\n        // NOTE: 随后可以加入游戏房间\n        dataManager.isGameEnd = false;\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          console.log(\"录屏开始\");\n        }\n        dataManager.gameRecorderManager.onStop((res) => {\n          console.warn(\"录屏结束\");\n          console.log(res.videoPath);\n          // do somethine;\n          tt.showLoading({\n            title: \"上传中，请稍后...\",\n            success(res) {\n              console.log(`${res}`);\n            },\n            fail(res) {\n              console.log(`showLoading调用失败`);\n            },\n          });\n          // do somethine;\n          dataManager.videoTempPath = res.videoPath;\n          if (dataManager.tiago && dataManager.videoTempPath && dataManager.isGameEnd) {\n            dataManager.tiago\n              .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n              .then(() => {\n                tt.hideLoading();\n                tt.showToast({\n                  title: `录屏上传成功`,\n                  icon: \"none\",\n                  duration: 3000,\n                });\n              })\n              .catch((e) => {\n                tt.hideLoading();\n                tt.showToast({\n                  title: `录屏上传失败`,\n                  icon: \"none\",\n                  duration: 3000,\n                });\n              });\n          }\n        });\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    match.on(\"error\", (error) => {\n      console.log(error);\n    });\n  },\n\n  onClickStartSingleMatchAI() {\n    const match = tiago.startSingleMatch({\n      isAutoAppendAI: true, // 支持 AI 逻辑\n    });\n\n    match.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n    });\n\n    match.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n      cc.director.loadScene(\"game\", () => {\n        // NOTE: 随后可以加入游戏房间\n        dataManager.isGameEnd = false;\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          console.warn(\"录屏开始\");\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          dataManager.gameRecorderManager.onStop((res) => {\n            console.warn(\"录屏结束\");\n            console.log(res.videoPath);\n            // do somethine;\n            tt.showLoading({\n              title: \"上传中，请稍后...\",\n              success(res) {\n                console.log(`${res}`);\n              },\n              fail(res) {\n                console.log(`showLoading调用失败`);\n              },\n            });\n            // do somethine;\n              \n            dataManager.videoTempPath = res.videoPath;\n            if (\n              dataManager.tiago &&\n              dataManager.videoTempPath &&\n              dataManager.isGameEnd\n            ) {\n              dataManager.tiago\n                .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n                .then(() => {\n                  tt.hideLoading();\n                  tt.showToast({\n                    title: `录屏上传成功`,\n                    icon: \"none\",\n                    duration: 3000,\n                  });\n                })\n                .catch((e) => {\n                  tt.hideLoading();\n                  tt.showToast({\n                    title: `录屏上传失败`,\n                    icon: \"none\",\n                    duration: 3000,\n                  });\n                });\n            }\n          });\n        }\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    match.on(\"error\", (error) => {\n      console.log(error);\n    });\n  },\n\n  onClickMakeTeam(event, userData) {\n    // userData: '2', '2-ai', 符合这类格式\n    let [size, ai] = userData.split(\"-\");\n    size = parseInt(size);\n    ai = !!ai;\n\n    console.log(size);\n    console.log(ai);\n\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n\n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: size, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        minPlayerCount: 1, // 1 个人就能玩\n        matchId: `match-${size}`,\n        isAutoAppendAI: ai, // 配合 SINGLE，字段，默认不补充 AI，NVN 匹配时不支持 AI\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n        // disableAutoCreateGameRoom: true, // 默认自动创建游戏房间，可以关闭（生肖派对），关闭后，gameRoomScriptId 字段失效\n      },\n    });\n\n    // NOTE: 后续的逻辑，都会由 tiago init 时传入的 `onJoinTeam` 回调触发\n  },\n\n  onClickDisableMatch() {\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n\n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: 4, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      disableMatch: true, // 禁用匹配，因此只有组满人才会开始游戏；match 中 minPlayerCount、isAutoAppendAI 字段就会被忽略。\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n      },\n    });\n  },\n\n  onClickDisableInvite() {\n    // NOTE: 创建新队伍前，先清理一下\n    dataManager.currentTeam = null;\n\n    // NOTE: 创建一个队伍，匹配时进行 Single 类型匹配\n    tiago.makeTeam({\n      teamSize: 4, // 2-9 人\n      isAutoJoinRTC: true, // 默认组队时进行连麦\n      disableInvite: true, // 特殊功能，禁用邀请后，会自动开始单人匹配；match 中 minPlayerCount、isAutoAppendAI 字段就会被忽略。\n      match: {\n        type: tiago.MATCH_TYPE.Single, // SINGLE, NVN,\n        gameRoomScriptId: \"room-283\", // 房间服务适用、指定不同的游戏房间脚本 ID（注意不是脚本名称）、配合 IDE 上传房间脚本时使用\n      },\n    });\n  },\n\n  onClickMoveMic() {\n    // NOTE: 如果麦克风默认的位置影响了游戏 UI 显示，可以使用改接口更改位置\n    tiago.setMicPanelOffset(10, 100);\n  },\n\n  onClickRoom() {\n    cc.director.loadScene(\"room\");\n  },\n\n  onJoinTeam(team) {\n    console.warn(\"on join team\");\n    // NOTE: 可以在适当的时机进行清理，例如：在每次 makeTeam 之前。\n    dataManager.currentTeam = team;\n\n    team.on(\"match-success\", (result) => {\n      // 获得匹配成功后的用户信息\n      console.log(result);\n      console.log(team.detail());\n    });\n\n    team.on(\"create-game-room-success\", (result) => {\n      console.log(result);\n\n      // NOTE: 如果游戏场景比较复杂，可以预加载一下\n      // 可以先切换场景，然后连入游戏房间\n        cc.director.loadScene(\"multi-game\", () => {\n            dataManager.isGameEnd = false;\n        // NOTE: 随后可以加入游戏房间\n        const room = tiago.joinGameRoom({\n          roomNum: result.roomNum,\n        });\n        if (tiago.utils.isTT()) {\n          dataManager.gameRecorderManager = tt.getGameRecorderManager();\n          console.warn(\"录屏开始\");\n          dataManager.gameRecorderManager.start({\n            duration: 300,\n          });\n          dataManager.gameRecorderManager.onStop((res) => {\n            console.warn(\"录屏结束\");\n            console.log(res.videoPath);\n            tt.showLoading({\n              title: \"上传中，请稍后...\",\n              success(res) {\n                console.log(`${res}`);\n              },\n              fail(res) {\n                console.log(`showLoading调用失败`);\n              },\n            });\n            // do somethine;\n            dataManager.videoTempPath = res.videoPath;\n            if (dataManager.tiago && dataManager.videoTempPath && dataManager.isGameEnd) {\n              dataManager.tiago\n                .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n                .then(() => {\n                  tt.hideLoading();\n                  tt.showToast({\n                    title: `录屏上传成功`,\n                    icon: \"none\",\n                    duration: 3000,\n                  });\n                })\n                .catch((e) => {\n                  tt.hideLoading();\n                  tt.showToast({\n                    title: `录屏上传失败`,\n                    icon: \"none\",\n                    duration: 3000,\n                  });\n                });\n            }\n          });\n        }\n        // NOTE: 加入房间连麦\n        tiago.joinRTCForGameRoom(room);\n\n        // 交由 room_manager 进行管理\n        roomManager.loadRoom(room);\n      });\n    });\n\n    team.on(\"error\", (error) => {\n      console.error(`team on error`, error);\n    });\n  },\n});\n"]}