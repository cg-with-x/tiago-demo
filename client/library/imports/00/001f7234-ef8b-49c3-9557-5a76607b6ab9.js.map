{"version":3,"sources":["../../../../assets/scripts/assets/scripts/room_manager.js"],"names":["RoomManager","room","on","console","log","tiago","joinRTCForGameRoom","send","JSON","stringify","event","message","scene","cc","director","getScene","name","canvas","getChildByName","getComponent","onRoomMessage","leaveRTCFromGameRoom","param","close","module","exports"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;IACMA;AACF,2BAAc;AAAA;;AACV,aAAKC,IAAL,GAAY,IAAZ;AACH;;;;iCAEQA,MAAM;AAAA;;AACX,iBAAKA,IAAL,GAAYA,IAAZ;;AAEAA,iBAAKC,EAAL,CAAQ,MAAR,EAAgB,YAAM;AAClBC,wBAAQC,GAAR,CAAY,gBAAZ;AACAC,gCAAMC,kBAAN,CAAyBL,IAAzB;;AAEA,sBAAKA,IAAL,CAAUM,IAAV,CAAeC,KAAKC,SAAL,CAAe;AAC1BC,2BAAO;AADmB,iBAAf,CAAf;AAGH,aAPD;;AASAT,iBAAKC,EAAL,CAAQ,SAAR,EAAmB,gBAAiB;AAAA,oBAAdS,OAAc,QAAdA,OAAc;;AAChCR,wBAAQC,GAAR,CAAY,gBAAZ,EAA8BO,OAA9B;;AAEA,oBAAMC,QAAQC,GAAGC,QAAH,CAAYC,QAAZ,EAAd;AACA,oBAAIH,MAAMI,IAAN,KAAe,MAAnB,EAA2B;;AAEvB;AACA,wBAAMC,SAASL,MAAMM,cAAN,CAAqB,QAArB,CAAf;AACA,wBAAID,MAAJ,EAAY;AACRA,+BAAOE,YAAP,CAAoB,MAApB,EAA4BC,aAA5B,CAA0CT,OAA1C;AACH;AACJ,iBAPD,MAOO,IAAIC,MAAMI,IAAN,KAAe,YAAnB,EAAiC;AACpC;AACA,wBAAMC,UAASL,MAAMM,cAAN,CAAqB,QAArB,CAAf;AACA,wBAAID,OAAJ,EAAY;AACRA,gCAAOE,YAAP,CAAoB,YAApB,EAAkCC,aAAlC,CAAgDT,OAAhD;AACH;AACJ;AACJ,aAlBD;;AAoBAV,iBAAKC,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACnBC,wBAAQC,GAAR,CAAY,cAAZ;AACAC,gCAAMgB,oBAAN,CAA2BpB,IAA3B;;AAEA;AACA;AACA;AACA;AACH,aARD;;AAUAA,iBAAKC,EAAL,CAAQ,OAAR,EAAiB,UAACoB,KAAD,EAAW;AACxBnB,wBAAQC,GAAR,CAAY,cAAZ,EAA4BkB,KAA5B;AACH,aAFD;;AAIArB,iBAAKC,EAAL,CAAQ,cAAR,EAAwB,UAACoB,KAAD,EAAW;AAC/BnB,wBAAQC,GAAR,CAAY,eAAZ,EAA6BkB,KAA7B;AACAjB,gCAAMC,kBAAN,CAAyBL,IAAzB;AACH,aAHD;AAIH;;;gCAEO;AACJ,gBAAI,KAAKA,IAAT,EAAe;AACX,qBAAKA,IAAL,CAAUsB,KAAV;AACA,qBAAKtB,IAAL,GAAY,IAAZ;AACH;AACJ;;;;;;AAGLuB,OAAOC,OAAP,GAAiB,IAAIzB,WAAJ,EAAjB","file":"room_manager.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import tiago from '@byted-creative/tiago';\nimport dataManager from './data_manager';\n\n// NOTE: 房间服务的事件抽出单独处理\nclass RoomManager {\n    constructor() {\n        this.room = null;\n    }\n\n    loadRoom(room) {\n        this.room = room;\n\n        room.on('open', () => {\n            console.log('[room] 进入游戏成功!');\n            tiago.joinRTCForGameRoom(room);\n\n            this.room.send(JSON.stringify({\n                event: 'ready',\n            }));\n        });\n\n        room.on('message', ({ message }) => {\n            console.log('[room] 接受到消息: ', message);\n\n            const scene = cc.director.getScene();\n            if (scene.name === 'game') {\n\n                // NOTE: 也可以使用 Event 方式传递\n                const canvas = scene.getChildByName('Canvas');\n                if (canvas) {\n                    canvas.getComponent('game').onRoomMessage(message);\n                }\n            } else if (scene.name === 'multi-game') {\n                // NOTE: 也可以使用 Event 方式传递\n                const canvas = scene.getChildByName('Canvas');\n                if (canvas) {\n                    canvas.getComponent('multi_game').onRoomMessage(message);\n                }\n            }\n        });\n\n        room.on('close', () => {\n            console.log('[room] 链接断开!');\n            tiago.leaveRTCFromGameRoom(room);\n            \n            // NOTE: 根据需要进行重新连接\n            // setTimeout(() => {\n            //     room.reconnect();\n            // }, 1000)\n        });\n\n        room.on('error', (param) => {\n            console.log('[room] 房间出错:', param);\n        });\n\n        room.on('reconnecting', (param) => {\n            console.log('[room] 重连中...', param);\n            tiago.joinRTCForGameRoom(room); \n        });\n    }\n\n    leave() {\n        if (this.room) {\n            this.room.close();\n            this.room = null;\n        }\n    }\n}\n\nmodule.exports = new RoomManager();"]}