{"version":3,"sources":["../../../../assets/scripts/assets/scripts/game.js"],"names":["cc","Class","extends","Component","playerAOpenId","playerBOpenId","properties","labelPlayerATip","Label","labelPlayerANickName","spritePlayerAAvatar","Sprite","labelPlayerBTip","labelPlayerBNickName","spritePlayerBAvatar","labelServerTime","start","onClickStopGame","roomManager","room","send","JSON","stringify","event","dataManager","tiago","leaveRTCFromGameRoom","console","warn","isGameEnd","videoTempPath","uploadVideo","then","catch","e","gameRecorderManager","stop","leave","director","loadScene","currentTeam","return","onClickTalk","data","parseInt","Math","random","onClickReconnect","reconnect","onRoomMessage","messageStr","message","parse","length","forEach","environment","twoPlayersInfo","renderPlayers","string","renderTalk","playerA","playerB","openId","name","isAI","nickName","utils","renderAvatar","avatarUrl","tip"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import roomManager from \"./room_manager\";\n\nimport utils from \"./utils\";\nimport dataManager from \"./data_manager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  playerAOpenId: \"\",\n  playerBOpenId: \"\",\n\n  properties: {\n    labelPlayerATip: cc.Label,\n    labelPlayerANickName: cc.Label,\n    spritePlayerAAvatar: cc.Sprite,\n\n    labelPlayerBTip: cc.Label,\n    labelPlayerBNickName: cc.Label,\n    spritePlayerBAvatar: cc.Sprite,\n\n    labelServerTime: cc.Label,\n  },\n\n  start() {},\n\n  onClickStopGame() {\n    roomManager.room.send(\n      JSON.stringify({\n        event: \"bye\",\n      })\n    );\n    // NOTE: 推出连麦\n    if (dataManager.tiago)\n      dataManager.tiago.leaveRTCFromGameRoom(roomManager.room);\n    console.warn(\"游戏结束\");\n    dataManager.isGameEnd = true;\n\n    if (\n      dataManager.tiago &&\n      dataManager.videoTempPath &&\n      dataManager.isGameEnd\n    ) {\n      dataManager.tiago\n        .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n        .then(() => {\n          \n        })\n        .catch((e) => {\n          \n        });\n    }\n    if (dataManager.gameRecorderManager) {\n      dataManager.gameRecorderManager.stop();\n    }\n    roomManager.leave();\n    cc.director.loadScene(\"start\");\n\n    // NOTE: 如果之前在一个组队中，则回到队伍\n    if (dataManager.currentTeam) dataManager.currentTeam.return();\n  },\n\n  onClickTalk() {\n    if (roomManager.room) {\n      roomManager.room.send(\n        JSON.stringify({\n          event: \"talk\",\n          data: parseInt(Math.random() * 100),\n        })\n      );\n    }\n  },\n\n  onClickReconnect() {\n    if (roomManager.room) {\n      roomManager.room.reconnect();\n    }\n  },\n\n  onRoomMessage(messageStr) {\n    // NOTE: 消息体的内容是开发者自己定义的，这里的代码只是一种示例\n    // NOTE: 开发者可以根据自己的房间脚本和协议，实现自身游戏的逻辑\n    const message = JSON.parse(messageStr);\n\n    if (message.length) {\n      message.forEach(({ event, data }) => {\n        switch (event) {\n          case \"game-start\":\n            break;\n          case \"environment\":\n            dataManager.environment = data;\n            break;\n          case \"info\":\n            dataManager.twoPlayersInfo = data;\n            this.renderPlayers();\n            break;\n          case \"server-time\":\n            this.labelServerTime.string = `${dataManager.environment}: ${data}`;\n            break;\n          case \"talk\":\n            this.renderTalk(data);\n            break;\n          case \"game-over\":\n            // NOTE: 推出连麦\n            if (dataManager.tiago)\n              dataManager.tiago.leaveRTCFromGameRoom(roomManager.room);\n            roomManager.leave();\n            cc.director.loadScene(\"start\");\n            // NOTE: 如果之前在一个组队中，则回到队伍\n            if (dataManager.currentTeam) dataManager.currentTeam.return();\n            console.warn(\"游戏结束\");\n            dataManager.isGameEnd = true;\n\n            if (\n              dataManager.tiago &&\n              dataManager.videoTempPath &&\n              dataManager.isGameEnd\n            ) {\n              dataManager.tiago\n                .uploadVideo(dataManager.videoTempPath, \"Hello Wonderland\")\n                .then(() => {\n                  \n                })\n                .catch((e) => {\n                  \n                });\n            }\n            if (dataManager.gameRecorderManager) {\n              dataManager.gameRecorderManager.stop();\n            }\n\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  },\n\n  renderPlayers() {\n    if (dataManager.twoPlayersInfo) {\n      const [playerA, playerB] = dataManager.twoPlayersInfo;\n\n      if (playerA) {\n        this.playerAOpenId = playerA.openId;\n        const name = playerA.isAI\n          ? `AI: ${playerA.nickName}`\n          : playerA.nickName;\n        this.labelPlayerANickName.string = name;\n        utils.renderAvatar(this.spritePlayerAAvatar, playerA.avatarUrl);\n      }\n\n      if (playerB) {\n        this.playerBOpenId = playerB.openId;\n        const name = playerB.isAI\n          ? `AI: ${playerB.nickName}`\n          : playerB.nickName;\n        this.labelPlayerBNickName.string = name;\n        utils.renderAvatar(this.spritePlayerBAvatar, playerB.avatarUrl);\n      }\n    }\n  },\n\n  renderTalk({ openId, data }) {\n    const tip = `战斗力 +${data}`;\n    if (openId === this.playerAOpenId) {\n      this.labelPlayerATip.string = tip;\n    } else if (openId === this.playerBOpenId) {\n      this.labelPlayerBTip.string = tip;\n    }\n  },\n\n  // update (dt) {},\n});\n"]}