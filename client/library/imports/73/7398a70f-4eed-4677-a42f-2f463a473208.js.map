{"version":3,"sources":["../../../../assets/scripts/assets/scripts/game.js"],"names":["cc","Class","extends","Component","playerAOpenId","playerBOpenId","properties","labelPlayerATip","Label","labelPlayerANickName","spritePlayerAAvatar","Sprite","labelPlayerBTip","labelPlayerBNickName","spritePlayerBAvatar","labelServerTime","start","onClickStopGame","roomManager","room","send","JSON","stringify","event","leave","director","loadScene","onClickTalk","data","parseInt","Math","random","onClickReconnect","reconnect","onRoomMessage","messageStr","message","parse","length","forEach","dataManager","environment","twoPlayersInfo","renderPlayers","string","renderTalk","playerA","playerB","openId","name","isAI","nickName","utils","renderAvatar","avatarUrl","tip"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import roomManager from './room_manager';\n\nimport utils from './utils';\nimport dataManager from './data_manager';        \n\ncc.Class({\n    extends: cc.Component,                \n\n    playerAOpenId: '',            \n    playerBOpenId: '',         \n\n    properties: {\n        labelPlayerATip: cc.Label,\n        labelPlayerANickName: cc.Label,\n        spritePlayerAAvatar: cc.Sprite,\n\n        labelPlayerBTip: cc.Label,\n        labelPlayerBNickName: cc.Label,\n        spritePlayerBAvatar: cc.Sprite,\n\n        labelServerTime: cc.Label,\n    },\n\n    start () {\n\n    },\n\n    onClickStopGame() {\n        roomManager.room.send(JSON.stringify({\n            event: 'bye',\n        }));\n        roomManager.leave();\n        cc.director.loadScene('start');\n    },\n\n    onClickTalk() {\n        if (roomManager.room) {\n            roomManager.room.send(JSON.stringify({\n                event: 'talk',\n                data: parseInt(Math.random() * 100),\n            }));\n        }\n    },\n\n    onClickReconnect() {\n        if (roomManager.room) {\n            roomManager.room.reconnect();\n        }\n    },\n\n    onRoomMessage(messageStr) {\n        // NOTE: 消息体的内容是开发者自己定义的，这里的代码只是一种示例\n        // NOTE: 开发者可以根据自己的房间脚本和协议，实现自身游戏的逻辑\n        const message = JSON.parse(messageStr);\n\n        if (message.length) {\n            message.forEach(({ event, data }) => {\n                switch (event) {\n                    case 'game-start':\n                        break;\n                    case 'environment':\n                        dataManager.environment = data;\n                        break;\n                    case 'info':\n                        dataManager.twoPlayersInfo = data;\n                        this.renderPlayers();\n                        break;\n                    case 'server-time':\n                        this.labelServerTime.string = `${dataManager.environment}: ${data}`;\n                        break;\n                    case 'talk':\n                        this.renderTalk(data);\n                        break;\n                    case 'game-over':\n                        roomManager.leave();\n                        cc.director.loadScene('start');\n                        break;\n                    default:\n                        break;\n                }\n            })\n        }\n    },\n\n    renderPlayers() {\n        if (dataManager.twoPlayersInfo) {\n            const [ playerA, playerB ] = dataManager.twoPlayersInfo;\n\n            if (playerA) {\n                this.playerAOpenId = playerA.openId;\n                const name = playerA.isAI ? `AI: ${playerA.nickName}` : playerA.nickName;\n                this.labelPlayerANickName.string = name;\n                utils.renderAvatar(this.spritePlayerAAvatar, playerA.avatarUrl);\n            }\n\n            if (playerB) {\n                this.playerBOpenId = playerB.openId;\n                const name = playerB.isAI ? `AI: ${playerB.nickName}` : playerB.nickName;\n                this.labelPlayerBNickName.string = name;\n                utils.renderAvatar(this.spritePlayerBAvatar, playerB.avatarUrl);\n            }\n        }\n    },\n\n    renderTalk({ openId, data }) {\n        const tip = `战斗力 +${data}`;\n        if (openId === this.playerAOpenId) {\n            this.labelPlayerATip.string = tip;\n        } else if (openId === this.playerBOpenId) {\n            this.labelPlayerBTip.string = tip;\n        }\n    }\n\n    // update (dt) {},\n});\n"]}