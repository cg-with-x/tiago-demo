{"version":3,"sources":["../../../../assets/scripts/assets/scripts/multi_game.js"],"names":["cc","Class","extends","Component","properties","chatRoot","Node","labelServerTime","Label","settlementRoot","labelResult","players","default","bestScorePlayer","bestScore","start","active","onClickStopGame","roomManager","room","send","JSON","stringify","event","showSettlement","onClickTalk","data","parseInt","Math","random","onClickReconnect","reconnect","onClickBack","director","loadScene","dataManager","tiago","leaveRTCFromGameRoom","leave","currentTeam","return","onRoomMessage","messageStr","message","parse","length","forEach","environment","multiPlayersInfo","renderPlayers","string","renderTalk","recordBestScore","removeAllChildren","i","player","openId","label","addComponent","addChild","node","y","info","tip","self","getUserInfo","isMe","name","isAI","nickName","Number"],"mappings":"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","file":"multi_game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import roomManager from './room_manager';\n\nimport utils from './utils';\nimport dataManager from './data_manager';        \n\ncc.Class({\n    extends: cc.Component,        \n\n    properties: {\n        chatRoot: cc.Node,\n        labelServerTime: cc.Label,\n        settlementRoot: cc.Node,\n        labelResult: cc.Label,\n        players: {\n            default: {},\n        },\n        bestScorePlayer: {\n            default: '',\n        },\n        bestScore: {\n            default: 0,\n        },\n    },\n\n    start () {\n        this.settlementRoot.active = false;\n    },\n\n    onClickStopGame() {\n        roomManager.room.send(JSON.stringify({\n            event: 'bye',\n        }));\n        this.showSettlement();\n    },\n\n    onClickTalk() {\n        if (roomManager.room) {\n            roomManager.room.send(JSON.stringify({\n                event: 'talk',\n                data: parseInt(Math.random() * 100),\n            }));\n        }\n    },\n\n    onClickReconnect() {\n        if (roomManager.room) {\n            roomManager.room.reconnect();\n        }\n    },\n\n    onClickBack() {\n        cc.director.loadScene('start');\n\n        // NOTE: 推出连麦\n        if (dataManager.tiago) dataManager.tiago.leaveRTCFromGameRoom(roomManager.room);\n        roomManager.leave();\n\n        // NOTE: 如果之前在一个组队中，则回到队伍\n        if (dataManager.currentTeam) dataManager.currentTeam.return();\n    },\n\n    onRoomMessage(messageStr) {\n        // NOTE: 消息体的内容是开发者自己定义的，这里的代码只是一种示例\n        // NOTE: 开发者可以根据自己的房间脚本和协议，实现自身游戏的逻辑\n        const message = JSON.parse(messageStr);\n\n        if (message.length) {\n            message.forEach(({ event, data }) => {\n                switch (event) {\n                    case 'game-start':\n                        break;\n                    case 'environment':\n                        dataManager.environment = data;\n                        break;\n                    case 'info':\n                        dataManager.multiPlayersInfo = data;\n                        this.renderPlayers();\n                        break;\n                    case 'server-time':\n                        this.labelServerTime.string = `${dataManager.environment}: ${data}`;\n                        break;\n                    case 'talk':\n                        this.renderTalk(data);\n                        this.recordBestScore(data);\n                        break;\n                    case 'game-over':\n                        this.showSettlement();\n                        break;\n                    default:\n                        break;\n                }\n            })\n        }\n    },\n\n    renderPlayers() {\n        if (dataManager.multiPlayersInfo) {\n            const players = dataManager.multiPlayersInfo;\n\n            this.chatRoot.removeAllChildren();\n            this.players = [];\n\n            for (let i = 0; i < players.length; i++) {\n                const player = players[i];\n                const openId = player.openId;\n                const label = new cc.Node().addComponent(cc.Label);\n                this.chatRoot.addChild(label.node);\n                label.node.y = -i * 70;\n\n                this.players[openId] = {\n                    openId,\n                    info: player,\n                    label,\n                };\n\n                this.renderTalk({ openId, data: '' });\n            }\n        }\n    },\n\n    renderTalk({ openId, data }) {\n        const tip = `战斗力 +${data}`;\n        const player = this.players[openId];\n        const self = dataManager.tiago.getUserInfo();\n\n        if (player && self) {\n            const isMe = player.openId === self.openId;\n            let name = player.info.isAI ? `AI: ${player.info.nickName}` : player.info.nickName;\n            if (isMe) name = `${name}(我)`;\n            player.label.string = `${name}: ${tip}`;\n        }\n    },\n\n    recordBestScore({ openId, data }) {\n        if (this.bestScore < Number(data)) {\n            this.bestScore = Number(data);\n            const player = this.players[openId];\n            this.bestScorePlayer = player.info.nickName;\n        }\n    },\n\n    showSettlement() {\n        this.settlementRoot.active = true;\n        if(this.bestScorePlayer) {\n            this.labelResult.string = `${this.bestScorePlayer}最高打出最高伤害: +${this.bestScore}`;\n        }\n    }\n\n    // update (dt) {},\n});\n"]}