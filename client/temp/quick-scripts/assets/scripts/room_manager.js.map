{"version":3,"sources":["room_manager.js"],"names":["RoomManager","room","on","console","log","cc","director","loadScene","send","JSON","stringify","event","message","scene","getScene","name","canvas","getChildByName","getComponent","onRoomMessage","param","close","module","exports"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;IACMA;AACF,2BAAc;AAAA;;AACV,aAAKC,IAAL,GAAY,IAAZ;AACH;;;;iCAEQA,MAAM;AAAA;;AACX,iBAAKA,IAAL,GAAYA,IAAZ;;AAEAA,iBAAKC,EAAL,CAAQ,MAAR,EAAgB,YAAM;AAClBC,wBAAQC,GAAR,CAAY,gBAAZ;;AAEA;AACAC,mBAAGC,QAAH,CAAYC,SAAZ,CAAsB,MAAtB,EAA8B,YAAM;AAChC,wBAAI,MAAKN,IAAT,EAAe;AACX,8BAAKA,IAAL,CAAUO,IAAV,CAAeC,KAAKC,SAAL,CAAe;AAC1BC,mCAAO;AADmB,yBAAf,CAAf;AAGH;AACJ,iBAND;AAOH,aAXD;;AAaAV,iBAAKC,EAAL,CAAQ,SAAR,EAAmB,gBAAiB;AAAA,oBAAdU,OAAc,QAAdA,OAAc;;AAChCT,wBAAQC,GAAR,CAAY,gBAAZ,EAA8BQ,OAA9B;;AAEA,oBAAMC,QAAQR,GAAGC,QAAH,CAAYQ,QAAZ,EAAd;AACA,oBAAID,MAAME,IAAN,KAAe,MAAnB,EAA2B;;AAEvB;AACA,wBAAMC,SAASH,MAAMI,cAAN,CAAqB,QAArB,CAAf;AACA,wBAAID,MAAJ,EAAY;AACRA,+BAAOE,YAAP,CAAoB,MAApB,EAA4BC,aAA5B,CAA0CP,OAA1C;AACH;AACJ;AACJ,aAZD;;AAcAX,iBAAKC,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACnBC,wBAAQC,GAAR,CAAY,cAAZ;;AAEA;AACA;AACA;AACA;AACH,aAPD;;AASAH,iBAAKC,EAAL,CAAQ,OAAR,EAAiB,UAACkB,KAAD,EAAW;AACxBjB,wBAAQC,GAAR,CAAY,cAAZ,EAA4BgB,KAA5B;AACH,aAFD;;AAIAnB,iBAAKC,EAAL,CAAQ,cAAR,EAAwB,UAACkB,KAAD,EAAW;AAC/BjB,wBAAQC,GAAR,CAAY,eAAZ,EAA6BgB,KAA7B;AACH,aAFD;AAGH;;;gCAEO;AACJ,gBAAI,KAAKnB,IAAT,EAAe;AACX,qBAAKA,IAAL,CAAUoB,KAAV;AACA,qBAAKpB,IAAL,GAAY,IAAZ;AACH;AACJ;;;;;;AAGLqB,OAAOC,OAAP,GAAiB,IAAIvB,WAAJ,EAAjB","file":"room_manager.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import tiago from '@byted-creative/tiago';\nimport dataManager from './data_manager';\n\n// NOTE: 房间服务的事件抽出单独处理\nclass RoomManager {\n    constructor() {\n        this.room = null;\n    }\n\n    loadRoom(room) {\n        this.room = room;\n\n        room.on('open', () => {\n            console.log('[room] 进入游戏成功!');\n\n            // NOTE: 如果游戏场景比较复杂，可以预加载一下\n            cc.director.loadScene('game', () => {\n                if (this.room) {\n                    this.room.send(JSON.stringify({\n                        event: 'ready',\n                    }));\n                }\n            });\n        });\n\n        room.on('message', ({ message }) => {\n            console.log('[room] 接受到消息: ', message);\n\n            const scene = cc.director.getScene();\n            if (scene.name === 'game') {\n\n                // NOTE: 也可以使用 Event 方式传递\n                const canvas = scene.getChildByName('Canvas');\n                if (canvas) {\n                    canvas.getComponent('game').onRoomMessage(message);\n                }\n            }\n        });\n\n        room.on('close', () => {\n            console.log('[room] 房间关闭!');\n\n            // NOTE: 根据需要进行重新连接\n            // setTimeout(() => {\n            //     room.reconnect();\n            // }, 1000)\n        });\n\n        room.on('error', (param) => {\n            console.log('[room] 房间出错:', param);\n        });\n\n        room.on('reconnecting', (param) => {\n            console.log('[room] 重连中...', param);\n        });\n    }\n\n    leave() {\n        if (this.room) {\n            this.room.close();\n            this.room = null;\n        }\n    }\n}\n\nmodule.exports = new RoomManager();"]}