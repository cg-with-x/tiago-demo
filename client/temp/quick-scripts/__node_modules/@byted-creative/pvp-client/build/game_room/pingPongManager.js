(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/__node_modules/@byted-creative/pvp-client/build/game_room/pingPongManager.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {cc._RF.push(module, '', 'pingPongManager', __filename);(function (global){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PingPongManager = (function () {
    function PingPongManager(size, interval, pingCallback, pongCallback) {
        if (size === void 0) { size = 10; }
        if (interval === void 0) { interval = 1000; }
        this._elementList = [];
        this._size = size;
        this._interval = interval;
        this._pingCallback = pingCallback;
        this._pongCallback = pongCallback;
    }
    PingPongManager.prototype.ping = function () {
        var timestamp = new Date().getTime();
        this._elementList.push({ ping: timestamp });
        if (this._elementList.length > this._size) {
            this._elementList.pop();
        }
        if (this._pingCallback) {
            this._pingCallback(timestamp);
        }
    };
    PingPongManager.prototype.pong = function (pingTimestamp) {
        var timestamp = new Date().getTime();
        var idx = this._elementList.findIndex(function (element) {
            return element.ping === pingTimestamp;
        });
        if (idx > -1) {
            this._elementList[idx].pong = timestamp;
            this._elementList[idx].halfDuration = Math.floor((timestamp - pingTimestamp) * 0.5);
            if (this._pongCallback) {
                this._pongCallback(pingTimestamp, timestamp);
            }
        }
    };
    PingPongManager.prototype.getAvHalfDuration = function () {
        if (this._elementList.length === 0)
            return 0;
        var timestamp = new Date().getTime();
        var sumHalfDuration = 0;
        var number = 0;
        this._elementList.forEach(function (element) {
            if (element.halfDuration) {
                sumHalfDuration += element.halfDuration;
            }
            else {
                sumHalfDuration += timestamp - element.ping;
            }
            number++;
        });
        return Math.floor(sumHalfDuration / number);
    };
    PingPongManager.prototype.startPingPong = function () {
        var _this = this;
        this._pingPongInterval = global.setInterval(function () {
            _this.ping();
        }, this._interval);
    };
    PingPongManager.prototype.clear = function () {
        if (this._pingPongInterval) {
            clearInterval(this._pingPongInterval);
        }
        this._elementList = [];
    };
    PingPongManager.prototype.pausePingPong = function () {
        if (this._pingPongInterval) {
            clearInterval(this._pingPongInterval);
        }
    };
    return PingPongManager;
}());
exports.default = PingPongManager;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        
        